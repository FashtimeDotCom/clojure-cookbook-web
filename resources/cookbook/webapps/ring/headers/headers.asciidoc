=== Request and Response headers in Ring
[role="byline"]
by Adam Bard

==== Problem

You need to read or write HTTP request or response headers.

==== Solution

Read or write the `:headers` key in Ring request or response maps.

[source, clojure]
----
(ns ringtest
  (:require
    [ring.adapter.jetty :as jetty]))

(defn user-agent-as-json
  "A handler that returns the User-agent header as a JSON
   response with an appropriate Content-Type"
  [req]
  {:body (str "{\"user-agent\": \"" (get-in req [:headers "user-agent"]) "\"}")
   :headers {"Content-Type" "application/json"}
   :status 200})

(defn -main []
  ;; Run the server on port 3000
  (jetty/run-jetty user-agent-as-json {:port 3000}))
----

==== Discussion

Ring passes request headers as a `:headers` parameter in the request map, and
accepts a `:headers` parameter in response maps as well.
Headers are
http://en.wikipedia.org/wiki/List_of_HTTP_header_fields[as in HTTP].

The above example defines a Ring handler that simply echoes the User-Agent
as a JSON response. It gets the User-Agent from the request header map, and
uses a Content-Type header in the response to ensure it is parsed as JSON
by a client.

Note that the keys of incoming headers are Strings, not Clojure keywords.